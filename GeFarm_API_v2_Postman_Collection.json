{
  "info": {
    "name": "Gefarm API v2.1 - Complete (Aggiornato Schema Meter)",
    "_postman_id": "gefarm-api-v2-complete",
    "description": "Collection completa per testare tutte le API di Gefarm con l'aggiunta di 'is_meter_owner' e i fix ai dati contatore (Chain2).",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://gefarmdb.altervista.org/gefarm_api_v2",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_email",
      "value": "mario.rossi@test.com",
      "type": "string",
      "description": "Email utilizzata per i test di registrazione e login"
    }
  ],
  "item": [
    {
      "name": "🔓 Public Endpoints",
      "item": [
        {
          "name": "Test API",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/test",
              "host": ["{{base_url}}"],
              "path": ["api", "test"]
            },
            "description": "Verifica che l'API sia operativa e restituisce info su PHP e database"
          }
        },
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('token', jsonData.data.token);",
                  "    var requestBody = JSON.parse(pm.request.body.raw);",
                  "    pm.collectionVariables.set('test_email', requestBody.email);",
                  "    console.log('Token e Email salvati. Utente non verificato.');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"Test1234!\",\n  \"nome\": \"Mario\",\n  \"cognome\": \"Rossi\",\n  \"avatar_color\": \"#00853d\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register.php"]
            },
            "description": "Registra un nuovo utente. Genera un codice di verifica a 5 cifre e salva il token iniziale."
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('token', jsonData.data.token);",
                  "    console.log('Login OK. Token salvato:', jsonData.data.token);",
                  "}",
                  "// Nota: Se l'utente non è verificato, atteso 403 Forbidden"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login.php"]
            },
            "description": "Login utente esistente. Richiede che l'utente sia verificato (`email_verified = TRUE`)."
          }
        }
      ]
    },
    {
      "name": "🔃 Reset Password & Email Verification",
      "item": [
        {
          "name": "Verify Email (Attiva Account)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"token\": \"12345\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/verify_email.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "verify_email.php"]
            },
            "description": "✅ Verifica l'email dell'utente utilizzando il codice a 5 cifre ricevuto. Usa 'test_email' variabile."
          }
        },
        {
          "name": "Resend Verification Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/resend_verification.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "resend_verification.php"]
            },
            "description": "✅ Richiede il reinvio del codice di verifica email (invalida i precedenti). Usa 'test_email' variabile."
          }
        },
        {
          "name": "Request Password Reset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/password_reset_request.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "password_reset_request.php"]
            },
            "description": "Richiede il reset della password. Un token verrà inviato all'email se esiste nel sistema."
          }
        },
        {
          "name": "Confirm Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"your-reset-token\",\n  \"new_password\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/password_reset_confirm.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "password_reset_confirm.php"]
            },
            "description": "Conferma il reset della password utilizzando il token ricevuto via email"
          }
        }
      ]
    },
    {
      "name": "🔒 User Endpoints",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/user/profile.php",
              "host": ["{{base_url}}"],
              "path": ["api", "user", "profile.php"]
            },
            "description": "Ottieni il profilo dell'utente autenticato"
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nome\": \"Mario\",\n  \"cognome\": \"Rossi Updated\",\n  \"avatar_color\": \"#FF5733\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/user/update_profile.php",
              "host": ["{{base_url}}"],
              "path": ["api", "user", "update_profile.php"]
            },
            "description": "Aggiorna il profilo dell'utente (nome, cognome, avatar_color)"
          }
        }
      ]
    },
    {
      "name": "📱 Device Endpoints",
      "item": [
        {
          "name": "Register New Device",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"device_id\": \"EMC-FIX-TEST\",\n  \"device_family\": \"emc\",\n  \"device_type\": \"emcengine\",\n  \"nome_dispositivo\": \"Il mio EMC Engine\",\n  \"ssid_ap\": \"EMC-FIX-TEST\",\n  \"chain2_active\": 1,\n  \"firmware_version\": \"1.0.0\",\n  \"nickname\": \"Casa principale\",\n  \"is_meter_owner\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/devices/register.php",
              "host": ["{{base_url}}"],
              "path": ["api", "devices", "register.php"]
            },
            "description": "CREA un nuovo dispositivo nel sistema e lo associa automaticamente all'utente. Aggiunto 'device_family' e 'is_meter_owner'."
          }
        },
        {
          "name": "Add Existing Device",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"device_id\": \"EMC-001-TEST\",\n  \"role\": \"user\",\n  \"nickname\": \"Dispositivo condiviso\",\n  \"is_meter_owner\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/devices/add.php",
              "host": ["{{base_url}}"],
              "path": ["api", "devices", "add.php"]
            },
            "description": "ASSOCIA un dispositivo già esistente all'utente. Richiede l'ID del dispositivo. Aggiunto 'is_meter_owner' per test."
          }
        },
        {
          "name": "List User Devices",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/devices/list.php",
              "host": ["{{base_url}}"],
              "path": ["api", "devices", "list.php"]
            },
            "description": "Ottieni la lista di tutti i dispositivi associati all'utente autenticato (ora include 'is_meter_owner')."
          }
        },
        {
          "name": "Get Device Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/devices/details.php?device_id=EMC-FIX-TEST",
              "host": ["{{base_url}}"],
              "path": ["api", "devices", "details.php"],
              "query": [
                {
                  "key": "device_id",
                  "value": "EMC-FIX-TEST"
                }
              ]
            },
            "description": "Ottieni i dettagli completi di un dispositivo (ora include 'is_meter_owner')."
          }
        }
      ]
    },
    {
      "name": "⚡ Meter Data (Chain2)",
      "item": [
        {
          "name": "Submit Meter Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"device_id\": \"EMC-FIX-TEST\",\n  \"cf\": \"RSSMRA80A01H501U\",\n  \"nome\": \"Mario\",\n  \"cognome\": \"Rossi\",\n  \"indirizzo\": \"Via Roma 123\",\n  \"zip_code\": \"00100\",\n  \"citta\": \"Roma\",\n  \"provincia\": \"RM\",\n  \"pod\": \"IT001E12345678\",\n  \"email\": \"mario.rossi@test.com\",\n  \"telefono\": \"3451234567\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/meter/submit.php",
              "host": ["{{base_url}}"],
              "path": ["api", "meter", "submit.php"]
            },
            "description": "Invia dati del contatore (Chain2). Richiede che l'utente sia 'is_meter_owner' per il dispositivo e cripta il CF."
          }
        },
        {
          "name": "Get Active Meter Data",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/meter/active.php?device_id=EMC-FIX-TEST",
              "host": ["{{base_url}}"],
              "path": ["api", "meter", "active.php"],
              "query": [
                {
                  "key": "device_id",
                  "value": "EMC-FIX-TEST"
                }
              ]
            },
            "description": "Ottieni i dati contatore attivi. Decripta il CF solo se l'utente è 'is_meter_owner'."
          }
        }
      ]
    },
    {
      "name": "🐛 Debug Endpoints",
      "item": [
        {
          "name": "Database Structure",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/debug/database_structure.php",
              "host": ["{{base_url}}"],
              "path": ["api", "debug", "database_structure.php"]
            },
            "description": "⚠️ DEBUG ONLY - Mostra la struttura di tutte le tabelle gefarm_*"
          }
        },
        {
          "name": "User Devices Associations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/debug/user_devices.php",
              "host": ["{{base_url}}"],
              "path": ["api", "debug", "user_devices.php"]
            },
            "description": "⚠️ DEBUG ONLY - Mostra associazioni utente-dispositivi (ora include 'is_meter_owner')."
          }
        }
      ]
    }
  ]
}